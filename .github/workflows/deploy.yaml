name: Deploy Remoto via SSH

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    environment: production
    timeout-minutes: 15

    steps:
      - name: Configurar ambiente
        uses: actions/github-script@v6
        with:
          script: |
            const prefix = 'DEPLOY_';
            Object.entries(process.env)
              .filter(([key]) => key.startsWith(prefix))
              .forEach(([key, value]) => {
                console.log(`::add-mask::${value}`);
                core.exportVariable(key.replace(prefix, ''), value);
              });

      - name: Executar deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          envs: BOT_TOKEN,CHAT_ID
          script: |
            set -euo pipefail

            REPO_DIR="${{ secrets.REPOSITORY_PATH }}/sentinel-metrics"
            CONFIG_TEMPLATE="./resources/alertmanager/templates/alertmanager.yaml.template"
            CONFIG_OUTPUT="./resources/alertmanager/alertmanager.yaml"

            # Clonar ou atualizar repositório
            if [ ! -d "$REPO_DIR/.git" ]; then
              git clone --branch main --single-branch \
                https://github.com/olliveirajr/sentinel-metrics.git "$REPO_DIR"
              cd "$REPO_DIR"
            else
              cd "$REPO_DIR"
              git reset --hard HEAD
              git pull origin main
            fi

            # Processar template com variáveis de ambiente
            export BOT_TOKEN CHAT_ID
            envsubst '${BOT_TOKEN} ${CHAT_ID}' < "$CONFIG_TEMPLATE" > "$CONFIG_OUTPUT"

            cp .env.example .env

            # Reiniciar containers Docker
            docker compose -f docker-compose.yaml down --remove-orphans
            docker compose -f docker-compose.yaml up -d --build --force-recreate

